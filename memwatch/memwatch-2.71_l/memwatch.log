
============= MEMWATCH 2.71 Copyright (C) 1992-1999 Johan Lindh =============

Started at Mon Nov  6 20:08:41 2017

Modes: __STDC__ 64-bit mwDWORD==(unsigned int)
mwROUNDALLOC==8 sizeof(mwData)==56 mwDataSize==56

statistics: now collecting on a line basis
Hello world!
underflow: <5> test.c(62), 200 bytes alloc'd at <4> test.c(60)
relink: <7> test.c(66) attempting to repair MW-0xa405a0...
relink: MW-0xa405a0 is the head (first) allocation
relink: MW-0xa405a0 prev pointer is non-NULL, you have a wild pointer
relink: successful, no allocations lost

Stopped at Mon Nov  6 20:08:41 2017

unfreed: <3> test.c(59), 20 bytes at 0xa40310  	{FE FE FE FE FE FE FE FE FE FE FE FE FE FE FE FE ................}

Memory usage statistics (global):
 N)umber of allocations made: 4
 L)argest memory usage      : 220
 T)otal of all alloc() calls: 530
 U)nfreed bytes totals      : 20

Memory usage statistics (detailed):
 Module/Line                                Number   Largest  Total    Unfreed 
 test.c                                     4        220      530      20      
  64                                        1        100      100      0       
  60                                        1        200      200      0       
  59                                        1        20       20       20      
  57                                        1        210      210      0       

============= MEMWATCH 2.71 Copyright (C) 1992-1999 Johan Lindh =============

Started at Mon Nov  6 20:28:43 2017

Modes: __STDC__ 64-bit mwDWORD==(unsigned int)
mwROUNDALLOC==8 sizeof(mwData)==56 mwDataSize==56

statistics: now collecting on a line basis
Hello world!
underflow: <5> test.c(62), 200 bytes alloc'd at <4> test.c(60)
relink: <7> test.c(66) attempting to repair MW-0x24de5a0...
relink: MW-0x24de5a0 is the head (first) allocation
relink: MW-0x24de5a0 prev pointer is non-NULL, you have a wild pointer
relink: successful, no allocations lost
limit: old limit = none, new limit = 1000000 bytes
grabbed: all allowed memory to no-mans-land (976 kb)
Killing byte at 0x24ea930
Killing byte at 0x24e5b10
Killing byte at 0x24de9c8
Killing byte at 0x24de57c
check: <7> test.c(95), checking chain alloc nomansland 
check: <7> test.c(95), complete; no errors
internal: <9> test.c(105), checksum for MW-0x25d62a0 is incorrect
underflow: <9> test.c(105), 0 bytes alloc'd at <8> test.c(865)
overflow: <9> test.c(105), 0 bytes alloc'd at <8> test.c(865)
internal: <9> test.c(107), no-mans-land MW-0x25d62a0 is corrupted
realloc: <9> test.c(107), 0x25d62e0 was freed from test.c(105)
